{"version":3,"sources":["utils/api.js","context/CountriesContext.js","components/Summary/Summary.style.js","components/Summary/Summary.js","components/List/List.style.js","context/AbbrevContext.js","components/List/ListElement/ListElement.style.js","components/List/ListElement/ListElement.js","components/List/FilteredList/FilteredList.style.js","context/SearchContext.js","components/List/FilteredList/FilteredList.js","components/List/List.js","components/Map/Map.style.js","components/Map/Map.js","components/Chart/Chart.style.js","components/Chart/Chart.js","App.style.js","App.js","index.js"],"names":["axios","get","CountryAbbrev","todayString","Date","toISOString","split","CountriesContext","createContext","CountriesProvider","props","useState","countries","setCountries","Provider","value","children","SummaryContainer","styled","div","Summary","summary","Math","round","confirmed","deaths","recovered","ListContainer","AbbrevContext","AbbrevProvider","abbrev","setAbbrev","ListElContainer","selected","ListElement","cData","useContext","setSelected","useEffect","CountryCode","document","getElementById","parentElement","scrollTop","offsetTop","id","onClick","className","Country","TotalConfirmed","TotalDeaths","TotalRecovered","class","FilteredLi","SearchContext","SearchProvider","searchInput","searchInputValue","FilteredList","filter","c","startsWith","map","fc","List","onChange","e","target","replace","txt","charAt","toUpperCase","substr","toLowerCase","type","placeholder","MapContainer","Map","coordinates","zoom","position","setPosition","toggleMap","querySelector","getAttribute","stroke","projectionConfig","scale","center","onMoveEnd","geography","geographies","geo","map-abbrev","properties","ISO_A2","fill","pos","ChartContainer","Chart","monthly","setMonthly","dataChartMonthly","setMonthlyData","beggining","today","getMonthlyData","data","array","monthDifference","getMonth","getFullYear","loopMonth","monthlyData","find","x","push","a","api","res","datasetData","labels","date","con","Confirmed","dead","Deaths","rec","Recovered","datasets","label","backgroundColor","borderColor","style","height","width","options","maintainAspectRatio","scales","xAxes","gridLines","display","color","yAxes","AppContainer","App","setSummData","Global","Countries","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce1359c7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  getSummary: () => {\r\n    return axios.get(\"/summary\");\r\n  },\r\n  getChartData: (CountryAbbrev) => {\r\n    const todayString = new Date().toISOString().split(\"T\")[0];\r\n\r\n    return axios.get(\r\n      `/country/${CountryAbbrev}?to=${todayString}T00:00:00Z`\r\n    );\r\n  },\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const CountriesContext = createContext();\r\n\r\nexport const CountriesProvider = (props) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  return (\r\n    <CountriesContext.Provider value={[countries, setCountries]}>\r\n      {props.children}\r\n    </CountriesContext.Provider>\r\n  );\r\n};","import styled from \"styled-components\";\r\n\r\nexport const SummaryContainer = styled.div`\r\n    height:100px;\r\n    width:100%;\r\n    position:relative;\r\n    background-color:#0E1F33;\r\n    border-bottom: 3px solid #CEA434;\r\n    div{\r\n        position absolute;\r\n        top:50%;\r\n        left:50%;\r\n        transform:translate(-50%,-50%);\r\n        width:100%;\r\n        h1{\r\n            text-align:center;\r\n            color:#F1F1F3;\r\n            font-family: 'Open Sans', sans-serif;\r\n        }\r\n        h1:last-child{\r\n            display:none;\r\n        }\r\n    }\r\n    @media screen and (max-width: 768px){\r\n        div{\r\n            h1:first-child{\r\n                display:none;\r\n            }\r\n            h1:last-child{\r\n                display:block;\r\n                font-size:28px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport {SummaryContainer} from \"./Summary.style\"\r\n\r\nconst Summary = ({summary}) => {\r\n    return (\r\n        <SummaryContainer>\r\n            <div>\r\n                <h1>{Math.round(summary.confirmed / 1000)}k Confirmed / {Math.round(summary.deaths / 1000)}k Deaths / {Math.round(summary.recovered / 1000)}k Recovered</h1>\r\n                <h1>{Math.round(summary.confirmed / 1000)}k / {Math.round(summary.deaths / 1000)}k / {Math.round(summary.recovered / 1000)}k</h1>\r\n            </div>\r\n        </SummaryContainer>\r\n    )\r\n}\r\n\r\nexport default Summary\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListContainer = styled.div`\r\n    width:300px;\r\n    height:calc(100vh - 100px);\r\n    background-color:#0E1F33;\r\n    padding: 15px 25px;\r\n    border-right:3px solid #CEA434;\r\n    .search{\r\n        width:100%;\r\n        positon relative;\r\n        i{\r\n            margin:4px 0 0 5px;\r\n            position:absolute;\r\n            color:#000;\r\n        }\r\n        input{\r\n            border-radius: 5px;\r\n            background-color:#f5f3f4;\r\n            color:#a4161a;\r\n            border:none;\r\n            width:250px;\r\n            padding: 5px 8px 5px 25px;\r\n            outline:none;\r\n        }\r\n    }\r\n    @media screen and (max-width: 768px){\r\n        width:100%;\r\n        border-right:none;\r\n        .search{\r\n            input{\r\n                width:100%;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const AbbrevContext = createContext();\r\n\r\nexport const AbbrevProvider = (props) => {\r\n  const [abbrev, setAbbrev] = useState(\"\");\r\n\r\n  return (\r\n    <AbbrevContext.Provider value={[abbrev, setAbbrev]}>\r\n      {props.children}\r\n    </AbbrevContext.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListElContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 12.5px 0px;\r\n  margin-right: 5px;\r\n  padding: 5px 0px 5px 10px;\r\n  background-color: ${(props) => (props.selected ? \"#CEA434\" : \"#F1F1F3\")};\r\n  border-radius: 5px;\r\n  .desc {\r\n    h3 {\r\n      width: 180px;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      font-size: 16px;\r\n      font-family: \"Open Sans\", sans-serif;\r\n    }\r\n    h3,\r\n    p {\r\n      color: ${(props) => (props.selected ? \"#F1F1F3\" : \"#000\")};\r\n    }\r\n    p {\r\n      width: 190px;\r\n      font-family: \"Roboto\", sans-serif;\r\n      font-size: 14px;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n  }\r\n  .icon {\r\n    margin: -5px 0;\r\n    padding: 15px 10px;\r\n    height: 50px;\r\n    background-color: #cea434;\r\n    border-top-right-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n\r\n    i {\r\n      color: #fff;\r\n    }\r\n  }\r\n  #id {\r\n    background-color: #000;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AbbrevContext } from \"../../../context/AbbrevContext\";\r\nimport { ListElContainer } from \"./ListElement.style\";\r\n\r\nconst ListElement = ({ cData }) => {\r\n  const [abbrev, setAbbrev] = useContext(AbbrevContext);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (abbrev === cData.CountryCode) setSelected(true);\r\n    else setSelected(false);\r\n  }, [abbrev]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selected &&\r\n      abbrev !== \"\" &&\r\n      abbrev !== \"GL\" &&\r\n      abbrev !== \"AQ\" &&\r\n      abbrev !== \"-99\"\r\n    ) {\r\n      document.getElementById(\"selected\").parentElement.scrollTop =\r\n        document.getElementById(\"selected\").offsetTop - 155;\r\n    }\r\n  }, [selected]);\r\n\r\n  const toggleEl = () => {\r\n    setAbbrev(cData.CountryCode);\r\n  };\r\n\r\n  return (\r\n    <ListElContainer\r\n      id={selected ? \"selected\" : \"\"}\r\n      selected={selected}\r\n      onClick={toggleEl}\r\n    >\r\n      <div className='desc'>\r\n        <h3>{cData.Country}</h3>\r\n        <p>\r\n          {cData.TotalConfirmed} / {cData.TotalDeaths} / {cData.TotalRecovered}\r\n        </p>\r\n      </div>\r\n      <div className='icon'>\r\n        <i class='fas fa-chart-area'></i>\r\n      </div>\r\n    </ListElContainer>\r\n  );\r\n};\r\n\r\nexport default ListElement;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilteredLi = styled.div`\r\n  margin-top: 15px;\r\n  // padding-right: 15px;\r\n  height: calc(100% - 45px);\r\n  overflow-y: scroll;\r\n  scroll-behavior: smooth;\r\n\r\n  div:first-child {\r\n    margin-top: 0;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n    background-color: #f1f1f3;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-color: #cea434;\r\n  }\r\n`;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const SearchContext = createContext();\r\n\r\nexport const SearchProvider = (props) => {\r\n    const [searchInput, searchInputValue] = useState(\"\");\r\n\r\n  return (\r\n    <SearchContext.Provider value={[searchInput, searchInputValue]}>\r\n      {props.children}\r\n    </SearchContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { CountriesContext } from \"../../../context/CountriesContext\";\r\nimport ListElement from \"../ListElement/ListElement\";\r\nimport { FilteredLi } from \"./FilteredList.style\";\r\nimport { SearchContext } from \"../../../context/SearchContext\";\r\n\r\nconst FilteredList = () => {\r\n  const [countries, setCountries] = useContext(CountriesContext);\r\n  const [searchInput, searchInputValue] = useContext(SearchContext);\r\n\r\n  return (\r\n    <FilteredLi>\r\n      {searchInput\r\n        ? countries\r\n            .filter((c) => c.Country.startsWith(searchInput))\r\n            .map((fc) => {\r\n              return <ListElement cData={fc} />;\r\n            })\r\n        : countries.map((c) => {\r\n            return <ListElement cData={c} />;\r\n          })}\r\n    </FilteredLi>\r\n  );\r\n};\r\n\r\nexport default FilteredList;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { ListContainer } from \"./List.style\";\r\nimport FilteredList from \"./FilteredList/FilteredList\";\r\nimport { AbbrevContext } from \"../../context/AbbrevContext\";\r\nimport {SearchContext } from \"../../context/SearchContext\"\r\n\r\nconst List = () => {\r\n  const [abbrev, setAbbrev] = useContext(AbbrevContext);\r\n  const [searchInput, searchInputValue] = useContext(SearchContext);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(searchInput !== \"\"){\r\n      setAbbrev(\"\");\r\n    }\r\n  },[searchInput])\r\n\r\n  const adjustCase = (str) => {\r\n    return str.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ListContainer>\r\n      <div className='search'>\r\n        <i class='fas fa-search'></i>\r\n        <input\r\n          onChange={(e) => searchInputValue(adjustCase(e.target.value))}\r\n          type='text'\r\n          placeholder='Search...'\r\n        />\r\n      </div>\r\n        <FilteredList/>\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MapContainer = styled.div`\r\n  width: calc(100% - 300px);\r\n  height: calc(100vh - 100px);\r\n  position: relative;\r\n  background-color: #0e1f33;\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    path {\r\n      outline: none;\r\n    }\r\n  }\r\n  .buttons {\r\n    position: absolute;\r\n    bottom: 4%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    button {\r\n      background-color: #cea434;\r\n      border: 1px solid #cea434;\r\n      border-radius: 50%;\r\n      padding: 10px 11px;\r\n      outline: none;\r\n      i {\r\n        color: #f1f1f3;\r\n      }\r\n    }\r\n    button:first-child {\r\n      margin-right: 15px;\r\n    }\r\n    button:last-child {\r\n      margin-left: 15px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport { AbbrevContext } from \"../../context/AbbrevContext\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport { MapContainer } from \"./Map.style\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst Map = () => {\r\n  const [abbrev, setAbbrev] = useContext(AbbrevContext);\r\n  const [searchInput, searchInputValue] = useContext(SearchContext);\r\n  const [position, setPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n\r\n  const toggleMap = (e) => {\r\n    searchInputValue(\"\");\r\n    document.querySelector(\".search input\").value = \"\";\r\n    setAbbrev(e.target.getAttribute(\"map-abbrev\"));\r\n  };\r\n\r\n  const handleZoomIn = () => {\r\n    if (position.zoom >= 4) return;\r\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom * 2 }));\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    if (position.zoom <= 1) return;\r\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom / 2 }));\r\n  };\r\n\r\n  const handleMoveEnd = (position) => {\r\n    setPosition(position);\r\n  };\r\n  return (\r\n    <MapContainer>\r\n      <ComposableMap stroke='#0E1F33' projectionConfig={{ scale: 140 }}>\r\n        <ZoomableGroup\r\n          zoom={position.zoom}\r\n          center={position.coordinates}\r\n          onMoveEnd={handleMoveEnd}\r\n        >\r\n          <Graticule stroke='#F1F1F3' />\r\n          <Sphere stroke='#F1F1F3' />\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                return (\r\n                  <Geography\r\n                    map-abbrev={geo.properties.ISO_A2}\r\n                    geography={geo}\r\n                    onClick={toggleMap}\r\n                    fill={\r\n                      geo.properties.ISO_A2 === abbrev ? \"#CEA434\" : \"#F1F1F3\"\r\n                    }\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <div className='buttons'>\r\n        <button onClick={handleZoomOut}>\r\n          <i class='fas fa-search-minus'></i>\r\n        </button>\r\n        <button onClick={handleZoomIn}>\r\n          <i class='fas fa-search-plus'></i>\r\n        </button>\r\n      </div>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import styled from \"styled-components\";\r\nimport {device} from \"../../utils/breakpoints\";\r\n\r\nexport const ChartContainer = styled.div`\r\n    width:100%;\r\n    height:500px;\r\n    padding: 40px 60px;\r\n    background-color:#0E1F33;\r\n    color:#F1F1F3;\r\n    border-top: 3px solid #CEA434;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    font-family: 'Roboto', sans-serif;\r\n    h2{\r\n        text-align:center;\r\n        margin-bottom:15px;\r\n        font-family: 'Open Sans', sans-serif;\r\n    }\r\n    @media screen and (max-width: 768px){\r\n        padding: 20px 25px;\r\n    }\r\n`;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport api from \"../../utils/api\";\r\nimport { AbbrevContext } from \"../../context/AbbrevContext\";\r\nimport { ChartContainer } from \"./Chart.style\";\r\n\r\nconst Chart = () => {\r\n  const [monthly, setMonthly] = useState([]);\r\n  const [dataChartMonthly, setMonthlyData] = useState({});\r\n  const [abbrev, setAbbrev] = useContext(AbbrevContext);\r\n\r\n  var beggining = new Date(2020, 1, 2);\r\n  const today = new Date();\r\n\r\n  const getMonthlyData = (data) => {\r\n    let array = [];\r\n    let monthDifference =\r\n      today.getMonth() -\r\n      beggining.getMonth() +\r\n      12 * (today.getFullYear() - beggining.getFullYear()) +\r\n      1;\r\n    while (monthDifference > 0) {\r\n      let loopMonth = beggining.toISOString().split(\"T\")[0];\r\n      let monthlyData = data.find((x) => x.Date === `${loopMonth}T00:00:00Z`);\r\n      array.push(monthlyData);\r\n      beggining = new Date(\r\n        beggining.getFullYear(),\r\n        beggining.getMonth() + 1,\r\n        2\r\n      );\r\n      monthDifference--;\r\n    }\r\n    setMonthly(array);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      abbrev !== \"\" &&\r\n      abbrev !== \"GL\" &&\r\n      abbrev !== \"AQ\" &&\r\n      abbrev !== \"-99\"\r\n    ) {\r\n      (async () => {\r\n        const res = await api.getChartData(abbrev);\r\n        getMonthlyData(res.data);\r\n      })();\r\n    }\r\n  }, [abbrev]);\r\n\r\n  useEffect(() => {\r\n    const datasetData = {\r\n      labels: monthly.map((date) => date.Date.split(\"T\")[0]),\r\n      confirmed: monthly.map((con) => con.Confirmed),\r\n      deaths: monthly.map((dead) => dead.Deaths),\r\n      recovered: monthly.map((rec) => rec.Recovered),\r\n    };\r\n\r\n    setMonthlyData({\r\n      labels: datasetData.labels,\r\n      datasets: [\r\n        {\r\n          label: \"Confirmed\",\r\n          backgroundColor: \"rgb(206, 164, 52, 0.5)\",\r\n          borderColor: \"rgb(206, 164, 52)\",\r\n\r\n          data: datasetData.confirmed,\r\n        },\r\n        {\r\n          label: \"Deaths\",\r\n          backgroundColor: \"rgb(25, 49, 83, 0.2)\",\r\n          borderColor: \"rgb(25, 49, 83)\",\r\n          data: datasetData.deaths,\r\n        },\r\n        {\r\n          label: \"Recovered\",\r\n          backgroundColor: \"rgb(255, 255, 255, 0.4)\",\r\n          borderColor: \"rgb(255,255,255)\",\r\n          data: datasetData.recovered,\r\n        },\r\n      ],\r\n    });\r\n  }, [monthly]);\r\n  return (\r\n    <ChartContainer>\r\n      <h2>Monthly Cases</h2>\r\n      <div\r\n        class='chart-container'\r\n        style={{ position: \"relative\", height: \"100%\", width: \"100%\" }}\r\n      >\r\n        <Line\r\n          data={dataChartMonthly}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: true,\r\n                    color: \"#CEA434\",\r\n                  },\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: true,\r\n                    color: \"#CEA434\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </ChartContainer>\r\n  );\r\n};\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\nimport {device} from \"./utils/breakpoints\";\r\n\r\nexport const AppContainer = styled.div`\r\n    .desktop{\r\n        display:flex;\r\n    }\r\n    @media screen and (max-width: 768px){\r\n        desktop{\r\n            div{\r\n                width:100%;\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport api from \"./utils/api\";\r\nimport { CountriesContext } from \"./context/CountriesContext\";\r\nimport Summary from \"./components/Summary/Summary\";\r\nimport List from \"./components/List/List\";\r\nimport Map from \"./components/Map/Map\";\r\nimport Chart from \"./components/Chart/Chart\"\r\nimport {AppContainer} from \"./App.style\"\r\n\r\nconst App = () => {\r\n  const [summary, setSummData] = useState({});\r\n  const [countries, setCountries] = useContext(CountriesContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await api.getSummary();\r\n      setSummData({\r\n        confirmed: res.data.Global.TotalConfirmed,\r\n        deaths: res.data.Global.TotalDeaths,\r\n        recovered: res.data.Global.TotalRecovered,\r\n      });\r\n      setCountries(res.data.Countries);\r\n    })();\r\n  }, []);\r\n  return (\r\n    <AppContainer>\r\n      <Summary summary={summary} />\r\n      <div className=\"desktop\">\r\n        <List />\r\n        <Map />\r\n      </div>\r\n      <Chart />\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { CountriesProvider } from \"./context/CountriesContext\";\r\nimport { AbbrevProvider } from \"./context/AbbrevContext\";\r\nimport {SearchProvider } from \"./context/SearchContext\"\r\n\r\nReactDOM.render(\r\n  <CountriesProvider>\r\n    <AbbrevProvider>\r\n      <SearchProvider>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n      </SearchProvider>\r\n    </AbbrevProvider>\r\n  </CountriesProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}